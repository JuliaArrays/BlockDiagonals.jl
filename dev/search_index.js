var documenterSearchIndex = {"docs":
[{"location":"#BlockDiagonals.jl-1","page":"Home","title":"BlockDiagonals.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Codecov)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Functionality for working efficiently with block diagonal matrices.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [BlockDiagonals]","category":"page"},{"location":"#BlockDiagonals.BlockDiagonal","page":"Home","title":"BlockDiagonals.BlockDiagonal","text":"BlockDiagonal{T, V<:AbstractMatrix{T}} <: AbstractMatrix{T}\n\nA matrix with matrices on the diagonal, and zeros off the diagonal.\n\n\n\n\n\n","category":"type"},{"location":"#BlockDiagonals.blocks-Tuple{BlockDiagonal}","page":"Home","title":"BlockDiagonals.blocks","text":"blocks(B::BlockDiagonal{T, V}) -> Vector{V}\n\nReturn the on-diagonal blocks of B.\n\n\n\n\n\n","category":"method"},{"location":"#BlockDiagonals.blocksize-Tuple{BlockDiagonal,Integer}","page":"Home","title":"BlockDiagonals.blocksize","text":"blocksize(B::BlockDiagonal, p::Integer, q::Integer=p) -> Tuple\n\nReturn the size of the p^th on-diagonal block. Optionally specify q to return the size of block p, q.\n\nExample\n\njulia> X = rand(2, 2); Y = rand(3, 3);\n\njulia> B = BlockDiagonal([X, Y]);\n\njulia> blocksize(B, 1)\n(2, 2)\n\njulia> blocksize(B, 1, 2)\n(2, 3)\n\nSee also blocksizes for accessing the size of all on-diagonal blocks easily.\n\n\n\n\n\n","category":"method"},{"location":"#BlockDiagonals.blocksizes-Tuple{BlockDiagonal}","page":"Home","title":"BlockDiagonals.blocksizes","text":"blocksizes(B::BlockDiagonal) -> Vector{Tuple}\n\nReturn the size of each on-diagonal block in order.\n\nExample\n\njulia> B = BlockDiagonal([rand(2, 2), rand(3, 3)]);\n\njulia> blocksizes(B)\n2-element Array{Tuple{Int64,Int64},1}:\n (2, 2)\n (3, 3)\n\nSee also blocksize for accessing the size of a single block efficiently.\n\n\n\n\n\n","category":"method"},{"location":"#BlockDiagonals.nblocks-Tuple{BlockDiagonal}","page":"Home","title":"BlockDiagonals.nblocks","text":"nblocks(B::BlockDiagonal[, dim])\n\nReturn the number of on-diagonal blocks.\n\nThe total number of blocks in the matrix is nblocks(B)^2.\n\n\n\n\n\n","category":"method"}]
}
